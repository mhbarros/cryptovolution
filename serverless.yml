org: mhbarros
app: cryptovolution
service: cryptovolution
useDotenv: true
frameworkVersion: '3'

custom:
  TABLE_CRYPTO_NAME: 'crypto'
  CRYPTO_UPDATE_INTERVAL: '2 minutes'
  dynamodb:
    stages:
      - dev
    start:
      port: 8000
      inMemory: true
      heapInitial: 200m
      heapMax: 1g
      migrate: true
      seed: true
      convertEmptyValues: true
      noStart: true

provider:
  name: aws
  runtime: nodejs14.x
  stage: dev
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
            - dynamodb:BatchWriteItem
          Resource:
            - Fn::GetAtt: [ CryptoTable2, Arn ]
  environment:
    TABLE_CRYPTO_NAME: ${self:custom.TABLE_CRYPTO_NAME}
    COINLAYER_API_KEY: ${file(./.env.yaml):COINLAYER_API_KEY}
    COINLAYER_CURRENCY: ${file(./.env.yaml):COINLAYER_CURRENCY}

functions:
  api:
    handler: handler.handler
    events:
      - httpApi: '*'
  updateCryptoValues:
    handler: handler.updateCryptoValues
    events:
      - eventBridge:
          enabled: false
          schedule: rate(${self:custom.CRYPTO_UPDATE_INTERVAL})

plugins:
  - serverless-plugin-typescript
  - serverless-dynamodb-local

resources:
  Resources:
    CryptoTable2:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.TABLE_CRYPTO_NAME}
        AttributeDefinitions:
          - AttributeName: token
            AttributeType: S
        KeySchema:
          - AttributeName: token
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
